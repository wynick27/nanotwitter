Test1: Simple display of home page

0-250 clients over 1 min.
err rate threshold: 70% timeout: 10s

Avg. Reponse Time: 5911ms
err rate: 57.5%

Response Times:
	Average: 7166 ms
	Min/Max: 128/10003 ms

Response Counts:
	Success: 375	Timeout: 203
	400/500: 0/305	Network: 0

Bandwidth:
	Sent 543.2KB
	Received 25.20MB

============================================

Test2: Display of weiyun’s home page

0-250 clients over 1 min.
err rate threshold: 70% timeout: 10s

Avg. Reponse Time: 3348ms
err rate: 0.0%

Response Times:
	Average: 3348 ms
	Min/Max: 56/7611 ms

Response Counts:
	Success: 2055	Timeout: 0
	400/500: 0/0	Network: 0

Bandwidth:
	Sent 1.26MB
	Received 45.93MB

Test2: Display of monserratstrosinjr’s home page

0-250 clients over 1 min.
err rate threshold: 70% timeout: 10s

Avg. Reponse Time: 3733ms
err rate: 0.0%

Response Times:
	Average: 4117 ms
	Min/Max: 75/7390 ms

Response Counts:
	Success: 1680	Timeout: 0
	400/500: 0/0	Network: 0

Bandwidth:
	Sent 1.06MB
	Received 38.33MB

==========================================
Test 3: Some Analysis
(heroku pg:outliers has problem)





##############################################################
Home page before login is relatively more expensive, and 
the number of tweets is much more than the selected user's page.

Home page can be optimized by using Reddis.


/test/seed/u - create “u” new users
/test/tweets/t - have testuser tweet “t” times
/test/follow/f - have f users follow testuser

Test case 1: u = 100, t = 500, f = 30
/: 
avg_resp: 8433ms  err_rate: 69.5%

/user/testuser/: 
avg_resp: 2819ms  err_rate: 0.0%

/user/testuser/tweet:
N/A





Test case 2: u = 500, t = 500, f = 100
/: 
avg_resp: 6725ms  err_rate: 43.9%

/user/testuser/: 
avg_resp: 445ms  err_rate: 71.8% (Failed)

/user/testuser/tweet:






Test case 3: u = 3000, t = 2000, f = 1000
/: 
avg_resp:   err_rate: % (cannot generate 3000 users)

/user/testuser/: 
avg_resp: ms  err_rate: %

/user/testuser/tweet:





























